/*
CH2 Management API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TargetInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TargetInfo{}

// TargetInfo struct for TargetInfo
type TargetInfo struct {
	Id string `json:"id"`
	Name string `json:"name"`
	// The version of the target.
	Version string `json:"version"`
	// The type of the target.
	Type string `json:"type"`
	Runtimes []SupportedRuntime `json:"runtimes"`
	Status string `json:"status"`
	// If present determines if the target is restricted to a particular set of environments. If it is restricted to all environments then an empty list has to be provided. If not present then there is not target restriction over an environment.
	Environments []string `json:"environments,omitempty"`
	// Determines if a deployment can be perfomed in a particular target.
	IsAvailableForDeployments bool `json:"isAvailableForDeployments"`
	// Replication Strategies for this target per deployment type.
	ReplicationStrategies map[string]interface{} `json:"replicationStrategies,omitempty"`
	Nodes []NodeInfo `json:"nodes"`
	// Default deployment settings for this target 
	Defaults map[string]interface{} `json:"defaults,omitempty"`
	// Flag for whether the target supports enhanced security features. 
	EnhancedSecurity *bool `json:"enhancedSecurity,omitempty"`
	// Supported Feature flags for the target 
	FeatureFlags map[string]interface{} `json:"featureFlags,omitempty"`
	// Target Region
	Region string `json:"region"`
}

// NewTargetInfo instantiates a new TargetInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetInfo(id string, name string, version string, type_ string, runtimes []SupportedRuntime, status string, isAvailableForDeployments bool, nodes []NodeInfo, region string) *TargetInfo {
	this := TargetInfo{}
	this.Id = id
	this.Name = name
	this.Version = version
	this.Type = type_
	this.Runtimes = runtimes
	this.Status = status
	this.IsAvailableForDeployments = isAvailableForDeployments
	this.Nodes = nodes
	this.Region = region
	return &this
}

// NewTargetInfoWithDefaults instantiates a new TargetInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetInfoWithDefaults() *TargetInfo {
	this := TargetInfo{}
	return &this
}

// GetId returns the Id field value
func (o *TargetInfo) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TargetInfo) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TargetInfo) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *TargetInfo) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TargetInfo) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TargetInfo) SetName(v string) {
	o.Name = v
}

// GetVersion returns the Version field value
func (o *TargetInfo) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *TargetInfo) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *TargetInfo) SetVersion(v string) {
	o.Version = v
}

// GetType returns the Type field value
func (o *TargetInfo) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TargetInfo) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TargetInfo) SetType(v string) {
	o.Type = v
}

// GetRuntimes returns the Runtimes field value
func (o *TargetInfo) GetRuntimes() []SupportedRuntime {
	if o == nil {
		var ret []SupportedRuntime
		return ret
	}

	return o.Runtimes
}

// GetRuntimesOk returns a tuple with the Runtimes field value
// and a boolean to check if the value has been set.
func (o *TargetInfo) GetRuntimesOk() ([]SupportedRuntime, bool) {
	if o == nil {
		return nil, false
	}
	return o.Runtimes, true
}

// SetRuntimes sets field value
func (o *TargetInfo) SetRuntimes(v []SupportedRuntime) {
	o.Runtimes = v
}

// GetStatus returns the Status field value
func (o *TargetInfo) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *TargetInfo) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *TargetInfo) SetStatus(v string) {
	o.Status = v
}

// GetEnvironments returns the Environments field value if set, zero value otherwise.
func (o *TargetInfo) GetEnvironments() []string {
	if o == nil || IsNil(o.Environments) {
		var ret []string
		return ret
	}
	return o.Environments
}

// GetEnvironmentsOk returns a tuple with the Environments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetInfo) GetEnvironmentsOk() ([]string, bool) {
	if o == nil || IsNil(o.Environments) {
		return nil, false
	}
	return o.Environments, true
}

// HasEnvironments returns a boolean if a field has been set.
func (o *TargetInfo) HasEnvironments() bool {
	if o != nil && !IsNil(o.Environments) {
		return true
	}

	return false
}

// SetEnvironments gets a reference to the given []string and assigns it to the Environments field.
func (o *TargetInfo) SetEnvironments(v []string) {
	o.Environments = v
}

// GetIsAvailableForDeployments returns the IsAvailableForDeployments field value
func (o *TargetInfo) GetIsAvailableForDeployments() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAvailableForDeployments
}

// GetIsAvailableForDeploymentsOk returns a tuple with the IsAvailableForDeployments field value
// and a boolean to check if the value has been set.
func (o *TargetInfo) GetIsAvailableForDeploymentsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsAvailableForDeployments, true
}

// SetIsAvailableForDeployments sets field value
func (o *TargetInfo) SetIsAvailableForDeployments(v bool) {
	o.IsAvailableForDeployments = v
}

// GetReplicationStrategies returns the ReplicationStrategies field value if set, zero value otherwise.
func (o *TargetInfo) GetReplicationStrategies() map[string]interface{} {
	if o == nil || IsNil(o.ReplicationStrategies) {
		var ret map[string]interface{}
		return ret
	}
	return o.ReplicationStrategies
}

// GetReplicationStrategiesOk returns a tuple with the ReplicationStrategies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetInfo) GetReplicationStrategiesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ReplicationStrategies) {
		return map[string]interface{}{}, false
	}
	return o.ReplicationStrategies, true
}

// HasReplicationStrategies returns a boolean if a field has been set.
func (o *TargetInfo) HasReplicationStrategies() bool {
	if o != nil && !IsNil(o.ReplicationStrategies) {
		return true
	}

	return false
}

// SetReplicationStrategies gets a reference to the given map[string]interface{} and assigns it to the ReplicationStrategies field.
func (o *TargetInfo) SetReplicationStrategies(v map[string]interface{}) {
	o.ReplicationStrategies = v
}

// GetNodes returns the Nodes field value
func (o *TargetInfo) GetNodes() []NodeInfo {
	if o == nil {
		var ret []NodeInfo
		return ret
	}

	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value
// and a boolean to check if the value has been set.
func (o *TargetInfo) GetNodesOk() ([]NodeInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.Nodes, true
}

// SetNodes sets field value
func (o *TargetInfo) SetNodes(v []NodeInfo) {
	o.Nodes = v
}

// GetDefaults returns the Defaults field value if set, zero value otherwise.
func (o *TargetInfo) GetDefaults() map[string]interface{} {
	if o == nil || IsNil(o.Defaults) {
		var ret map[string]interface{}
		return ret
	}
	return o.Defaults
}

// GetDefaultsOk returns a tuple with the Defaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetInfo) GetDefaultsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Defaults) {
		return map[string]interface{}{}, false
	}
	return o.Defaults, true
}

// HasDefaults returns a boolean if a field has been set.
func (o *TargetInfo) HasDefaults() bool {
	if o != nil && !IsNil(o.Defaults) {
		return true
	}

	return false
}

// SetDefaults gets a reference to the given map[string]interface{} and assigns it to the Defaults field.
func (o *TargetInfo) SetDefaults(v map[string]interface{}) {
	o.Defaults = v
}

// GetEnhancedSecurity returns the EnhancedSecurity field value if set, zero value otherwise.
func (o *TargetInfo) GetEnhancedSecurity() bool {
	if o == nil || IsNil(o.EnhancedSecurity) {
		var ret bool
		return ret
	}
	return *o.EnhancedSecurity
}

// GetEnhancedSecurityOk returns a tuple with the EnhancedSecurity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetInfo) GetEnhancedSecurityOk() (*bool, bool) {
	if o == nil || IsNil(o.EnhancedSecurity) {
		return nil, false
	}
	return o.EnhancedSecurity, true
}

// HasEnhancedSecurity returns a boolean if a field has been set.
func (o *TargetInfo) HasEnhancedSecurity() bool {
	if o != nil && !IsNil(o.EnhancedSecurity) {
		return true
	}

	return false
}

// SetEnhancedSecurity gets a reference to the given bool and assigns it to the EnhancedSecurity field.
func (o *TargetInfo) SetEnhancedSecurity(v bool) {
	o.EnhancedSecurity = &v
}

// GetFeatureFlags returns the FeatureFlags field value if set, zero value otherwise.
func (o *TargetInfo) GetFeatureFlags() map[string]interface{} {
	if o == nil || IsNil(o.FeatureFlags) {
		var ret map[string]interface{}
		return ret
	}
	return o.FeatureFlags
}

// GetFeatureFlagsOk returns a tuple with the FeatureFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetInfo) GetFeatureFlagsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.FeatureFlags) {
		return map[string]interface{}{}, false
	}
	return o.FeatureFlags, true
}

// HasFeatureFlags returns a boolean if a field has been set.
func (o *TargetInfo) HasFeatureFlags() bool {
	if o != nil && !IsNil(o.FeatureFlags) {
		return true
	}

	return false
}

// SetFeatureFlags gets a reference to the given map[string]interface{} and assigns it to the FeatureFlags field.
func (o *TargetInfo) SetFeatureFlags(v map[string]interface{}) {
	o.FeatureFlags = v
}

// GetRegion returns the Region field value
func (o *TargetInfo) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *TargetInfo) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *TargetInfo) SetRegion(v string) {
	o.Region = v
}

func (o TargetInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TargetInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["version"] = o.Version
	toSerialize["type"] = o.Type
	toSerialize["runtimes"] = o.Runtimes
	toSerialize["status"] = o.Status
	if !IsNil(o.Environments) {
		toSerialize["environments"] = o.Environments
	}
	toSerialize["isAvailableForDeployments"] = o.IsAvailableForDeployments
	if !IsNil(o.ReplicationStrategies) {
		toSerialize["replicationStrategies"] = o.ReplicationStrategies
	}
	toSerialize["nodes"] = o.Nodes
	if !IsNil(o.Defaults) {
		toSerialize["defaults"] = o.Defaults
	}
	if !IsNil(o.EnhancedSecurity) {
		toSerialize["enhancedSecurity"] = o.EnhancedSecurity
	}
	if !IsNil(o.FeatureFlags) {
		toSerialize["featureFlags"] = o.FeatureFlags
	}
	toSerialize["region"] = o.Region
	return toSerialize, nil
}

type NullableTargetInfo struct {
	value *TargetInfo
	isSet bool
}

func (v NullableTargetInfo) Get() *TargetInfo {
	return v.value
}

func (v *NullableTargetInfo) Set(val *TargetInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetInfo(val *TargetInfo) *NullableTargetInfo {
	return &NullableTargetInfo{value: val, isSet: true}
}

func (v NullableTargetInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


