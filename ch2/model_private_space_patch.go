/*
CH2 Management API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PrivateSpacePatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateSpacePatch{}

// PrivateSpacePatch struct for PrivateSpacePatch
type PrivateSpacePatch struct {
	Environments Environments4 `json:"environments"`
	Network Network5 `json:"network"`
	// Deprecated
	ManagedFirewallRules []FirewallRule `json:"managedFirewallRules,omitempty"`
	// The firewall rules for the Private Space 
	FirewallRules []FirewallRule `json:"firewallRules"`
	LogForwarding LogForwarding `json:"logForwarding"`
	IngressConfiguration IngressConfiguration6 `json:"ingressConfiguration"`
	// If true, application deployed to this space will have the Private Space IAM role attached to the service account.
	EnableIAMRole *bool `json:"enableIAMRole,omitempty"`
}

// NewPrivateSpacePatch instantiates a new PrivateSpacePatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateSpacePatch(environments Environments4, network Network5, firewallRules []FirewallRule, logForwarding LogForwarding, ingressConfiguration IngressConfiguration6) *PrivateSpacePatch {
	this := PrivateSpacePatch{}
	this.Environments = environments
	this.Network = network
	this.FirewallRules = firewallRules
	this.LogForwarding = logForwarding
	this.IngressConfiguration = ingressConfiguration
	return &this
}

// NewPrivateSpacePatchWithDefaults instantiates a new PrivateSpacePatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateSpacePatchWithDefaults() *PrivateSpacePatch {
	this := PrivateSpacePatch{}
	return &this
}

// GetEnvironments returns the Environments field value
func (o *PrivateSpacePatch) GetEnvironments() Environments4 {
	if o == nil {
		var ret Environments4
		return ret
	}

	return o.Environments
}

// GetEnvironmentsOk returns a tuple with the Environments field value
// and a boolean to check if the value has been set.
func (o *PrivateSpacePatch) GetEnvironmentsOk() (*Environments4, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environments, true
}

// SetEnvironments sets field value
func (o *PrivateSpacePatch) SetEnvironments(v Environments4) {
	o.Environments = v
}

// GetNetwork returns the Network field value
func (o *PrivateSpacePatch) GetNetwork() Network5 {
	if o == nil {
		var ret Network5
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *PrivateSpacePatch) GetNetworkOk() (*Network5, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *PrivateSpacePatch) SetNetwork(v Network5) {
	o.Network = v
}

// GetManagedFirewallRules returns the ManagedFirewallRules field value if set, zero value otherwise.
func (o *PrivateSpacePatch) GetManagedFirewallRules() []FirewallRule {
	if o == nil || IsNil(o.ManagedFirewallRules) {
		var ret []FirewallRule
		return ret
	}
	return o.ManagedFirewallRules
}

// GetManagedFirewallRulesOk returns a tuple with the ManagedFirewallRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpacePatch) GetManagedFirewallRulesOk() ([]FirewallRule, bool) {
	if o == nil || IsNil(o.ManagedFirewallRules) {
		return nil, false
	}
	return o.ManagedFirewallRules, true
}

// HasManagedFirewallRules returns a boolean if a field has been set.
func (o *PrivateSpacePatch) HasManagedFirewallRules() bool {
	if o != nil && !IsNil(o.ManagedFirewallRules) {
		return true
	}

	return false
}

// SetManagedFirewallRules gets a reference to the given []FirewallRule and assigns it to the ManagedFirewallRules field.
func (o *PrivateSpacePatch) SetManagedFirewallRules(v []FirewallRule) {
	o.ManagedFirewallRules = v
}

// GetFirewallRules returns the FirewallRules field value
func (o *PrivateSpacePatch) GetFirewallRules() []FirewallRule {
	if o == nil {
		var ret []FirewallRule
		return ret
	}

	return o.FirewallRules
}

// GetFirewallRulesOk returns a tuple with the FirewallRules field value
// and a boolean to check if the value has been set.
func (o *PrivateSpacePatch) GetFirewallRulesOk() ([]FirewallRule, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirewallRules, true
}

// SetFirewallRules sets field value
func (o *PrivateSpacePatch) SetFirewallRules(v []FirewallRule) {
	o.FirewallRules = v
}

// GetLogForwarding returns the LogForwarding field value
func (o *PrivateSpacePatch) GetLogForwarding() LogForwarding {
	if o == nil {
		var ret LogForwarding
		return ret
	}

	return o.LogForwarding
}

// GetLogForwardingOk returns a tuple with the LogForwarding field value
// and a boolean to check if the value has been set.
func (o *PrivateSpacePatch) GetLogForwardingOk() (*LogForwarding, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LogForwarding, true
}

// SetLogForwarding sets field value
func (o *PrivateSpacePatch) SetLogForwarding(v LogForwarding) {
	o.LogForwarding = v
}

// GetIngressConfiguration returns the IngressConfiguration field value
func (o *PrivateSpacePatch) GetIngressConfiguration() IngressConfiguration6 {
	if o == nil {
		var ret IngressConfiguration6
		return ret
	}

	return o.IngressConfiguration
}

// GetIngressConfigurationOk returns a tuple with the IngressConfiguration field value
// and a boolean to check if the value has been set.
func (o *PrivateSpacePatch) GetIngressConfigurationOk() (*IngressConfiguration6, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IngressConfiguration, true
}

// SetIngressConfiguration sets field value
func (o *PrivateSpacePatch) SetIngressConfiguration(v IngressConfiguration6) {
	o.IngressConfiguration = v
}

// GetEnableIAMRole returns the EnableIAMRole field value if set, zero value otherwise.
func (o *PrivateSpacePatch) GetEnableIAMRole() bool {
	if o == nil || IsNil(o.EnableIAMRole) {
		var ret bool
		return ret
	}
	return *o.EnableIAMRole
}

// GetEnableIAMRoleOk returns a tuple with the EnableIAMRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpacePatch) GetEnableIAMRoleOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableIAMRole) {
		return nil, false
	}
	return o.EnableIAMRole, true
}

// HasEnableIAMRole returns a boolean if a field has been set.
func (o *PrivateSpacePatch) HasEnableIAMRole() bool {
	if o != nil && !IsNil(o.EnableIAMRole) {
		return true
	}

	return false
}

// SetEnableIAMRole gets a reference to the given bool and assigns it to the EnableIAMRole field.
func (o *PrivateSpacePatch) SetEnableIAMRole(v bool) {
	o.EnableIAMRole = &v
}

func (o PrivateSpacePatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateSpacePatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["environments"] = o.Environments
	toSerialize["network"] = o.Network
	if !IsNil(o.ManagedFirewallRules) {
		toSerialize["managedFirewallRules"] = o.ManagedFirewallRules
	}
	toSerialize["firewallRules"] = o.FirewallRules
	toSerialize["logForwarding"] = o.LogForwarding
	toSerialize["ingressConfiguration"] = o.IngressConfiguration
	if !IsNil(o.EnableIAMRole) {
		toSerialize["enableIAMRole"] = o.EnableIAMRole
	}
	return toSerialize, nil
}

type NullablePrivateSpacePatch struct {
	value *PrivateSpacePatch
	isSet bool
}

func (v NullablePrivateSpacePatch) Get() *PrivateSpacePatch {
	return v.value
}

func (v *NullablePrivateSpacePatch) Set(val *PrivateSpacePatch) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateSpacePatch) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateSpacePatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateSpacePatch(val *PrivateSpacePatch) *NullablePrivateSpacePatch {
	return &NullablePrivateSpacePatch{value: val, isSet: true}
}

func (v NullablePrivateSpacePatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateSpacePatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


