/*
CH2 Management API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PrivateSpaceConnectionVpnPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateSpaceConnectionVpnPatch{}

// PrivateSpaceConnectionVpnPatch struct for PrivateSpaceConnectionVpnPatch
type PrivateSpaceConnectionVpnPatch struct {
	Id string `json:"id"`
	Name *string `json:"name,omitempty"`
	// The ASN of the customer's outside network, used by VPNs utilizing BGP for routes. 
	RemoteAsn *float32 `json:"remoteAsn,omitempty"`
	// The ASN of the customer's cloudhub network, used by VPNs utilizing BGP for routes. 
	LocalAsn *float32 `json:"localAsn,omitempty"`
	// The IP address of the customer's VPN device on their outside network 
	RemoteIpAddress string `json:"remoteIpAddress"`
	// The CIDRs that the Cloudhub VPC will send traffic to via the VPN. 
	StaticRoutes []string `json:"staticRoutes"`
	// VPN tunnel configuration that the customer wants to be applied to their VPN connection. 
	VpnTunnels []Items7 `json:"vpnTunnels"`
}

// NewPrivateSpaceConnectionVpnPatch instantiates a new PrivateSpaceConnectionVpnPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateSpaceConnectionVpnPatch(id string, remoteIpAddress string, staticRoutes []string, vpnTunnels []Items7) *PrivateSpaceConnectionVpnPatch {
	this := PrivateSpaceConnectionVpnPatch{}
	this.Id = id
	this.RemoteIpAddress = remoteIpAddress
	this.StaticRoutes = staticRoutes
	this.VpnTunnels = vpnTunnels
	return &this
}

// NewPrivateSpaceConnectionVpnPatchWithDefaults instantiates a new PrivateSpaceConnectionVpnPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateSpaceConnectionVpnPatchWithDefaults() *PrivateSpaceConnectionVpnPatch {
	this := PrivateSpaceConnectionVpnPatch{}
	return &this
}

// GetId returns the Id field value
func (o *PrivateSpaceConnectionVpnPatch) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PrivateSpaceConnectionVpnPatch) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PrivateSpaceConnectionVpnPatch) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PrivateSpaceConnectionVpnPatch) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpaceConnectionVpnPatch) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PrivateSpaceConnectionVpnPatch) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PrivateSpaceConnectionVpnPatch) SetName(v string) {
	o.Name = &v
}

// GetRemoteAsn returns the RemoteAsn field value if set, zero value otherwise.
func (o *PrivateSpaceConnectionVpnPatch) GetRemoteAsn() float32 {
	if o == nil || IsNil(o.RemoteAsn) {
		var ret float32
		return ret
	}
	return *o.RemoteAsn
}

// GetRemoteAsnOk returns a tuple with the RemoteAsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpaceConnectionVpnPatch) GetRemoteAsnOk() (*float32, bool) {
	if o == nil || IsNil(o.RemoteAsn) {
		return nil, false
	}
	return o.RemoteAsn, true
}

// HasRemoteAsn returns a boolean if a field has been set.
func (o *PrivateSpaceConnectionVpnPatch) HasRemoteAsn() bool {
	if o != nil && !IsNil(o.RemoteAsn) {
		return true
	}

	return false
}

// SetRemoteAsn gets a reference to the given float32 and assigns it to the RemoteAsn field.
func (o *PrivateSpaceConnectionVpnPatch) SetRemoteAsn(v float32) {
	o.RemoteAsn = &v
}

// GetLocalAsn returns the LocalAsn field value if set, zero value otherwise.
func (o *PrivateSpaceConnectionVpnPatch) GetLocalAsn() float32 {
	if o == nil || IsNil(o.LocalAsn) {
		var ret float32
		return ret
	}
	return *o.LocalAsn
}

// GetLocalAsnOk returns a tuple with the LocalAsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpaceConnectionVpnPatch) GetLocalAsnOk() (*float32, bool) {
	if o == nil || IsNil(o.LocalAsn) {
		return nil, false
	}
	return o.LocalAsn, true
}

// HasLocalAsn returns a boolean if a field has been set.
func (o *PrivateSpaceConnectionVpnPatch) HasLocalAsn() bool {
	if o != nil && !IsNil(o.LocalAsn) {
		return true
	}

	return false
}

// SetLocalAsn gets a reference to the given float32 and assigns it to the LocalAsn field.
func (o *PrivateSpaceConnectionVpnPatch) SetLocalAsn(v float32) {
	o.LocalAsn = &v
}

// GetRemoteIpAddress returns the RemoteIpAddress field value
func (o *PrivateSpaceConnectionVpnPatch) GetRemoteIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RemoteIpAddress
}

// GetRemoteIpAddressOk returns a tuple with the RemoteIpAddress field value
// and a boolean to check if the value has been set.
func (o *PrivateSpaceConnectionVpnPatch) GetRemoteIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoteIpAddress, true
}

// SetRemoteIpAddress sets field value
func (o *PrivateSpaceConnectionVpnPatch) SetRemoteIpAddress(v string) {
	o.RemoteIpAddress = v
}

// GetStaticRoutes returns the StaticRoutes field value
func (o *PrivateSpaceConnectionVpnPatch) GetStaticRoutes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.StaticRoutes
}

// GetStaticRoutesOk returns a tuple with the StaticRoutes field value
// and a boolean to check if the value has been set.
func (o *PrivateSpaceConnectionVpnPatch) GetStaticRoutesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StaticRoutes, true
}

// SetStaticRoutes sets field value
func (o *PrivateSpaceConnectionVpnPatch) SetStaticRoutes(v []string) {
	o.StaticRoutes = v
}

// GetVpnTunnels returns the VpnTunnels field value
func (o *PrivateSpaceConnectionVpnPatch) GetVpnTunnels() []Items7 {
	if o == nil {
		var ret []Items7
		return ret
	}

	return o.VpnTunnels
}

// GetVpnTunnelsOk returns a tuple with the VpnTunnels field value
// and a boolean to check if the value has been set.
func (o *PrivateSpaceConnectionVpnPatch) GetVpnTunnelsOk() ([]Items7, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpnTunnels, true
}

// SetVpnTunnels sets field value
func (o *PrivateSpaceConnectionVpnPatch) SetVpnTunnels(v []Items7) {
	o.VpnTunnels = v
}

func (o PrivateSpaceConnectionVpnPatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateSpaceConnectionVpnPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RemoteAsn) {
		toSerialize["remoteAsn"] = o.RemoteAsn
	}
	if !IsNil(o.LocalAsn) {
		toSerialize["localAsn"] = o.LocalAsn
	}
	toSerialize["remoteIpAddress"] = o.RemoteIpAddress
	toSerialize["staticRoutes"] = o.StaticRoutes
	toSerialize["vpnTunnels"] = o.VpnTunnels
	return toSerialize, nil
}

type NullablePrivateSpaceConnectionVpnPatch struct {
	value *PrivateSpaceConnectionVpnPatch
	isSet bool
}

func (v NullablePrivateSpaceConnectionVpnPatch) Get() *PrivateSpaceConnectionVpnPatch {
	return v.value
}

func (v *NullablePrivateSpaceConnectionVpnPatch) Set(val *PrivateSpaceConnectionVpnPatch) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateSpaceConnectionVpnPatch) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateSpaceConnectionVpnPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateSpaceConnectionVpnPatch(val *PrivateSpaceConnectionVpnPatch) *NullablePrivateSpaceConnectionVpnPatch {
	return &NullablePrivateSpaceConnectionVpnPatch{value: val, isSet: true}
}

func (v NullablePrivateSpaceConnectionVpnPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateSpaceConnectionVpnPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


