/*
CH2 Management API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TypeErrorsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TypeErrorsInner{}

// TypeErrorsInner struct for TypeErrorsInner
type TypeErrorsInner struct {
	// Machine error description. Internal code representation for cosumer code error handling. 
	Code string `json:"code"`
	// Human readable error description. 
	Message string `json:"message"`
}

// NewTypeErrorsInner instantiates a new TypeErrorsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTypeErrorsInner(code string, message string) *TypeErrorsInner {
	this := TypeErrorsInner{}
	this.Code = code
	this.Message = message
	return &this
}

// NewTypeErrorsInnerWithDefaults instantiates a new TypeErrorsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTypeErrorsInnerWithDefaults() *TypeErrorsInner {
	this := TypeErrorsInner{}
	return &this
}

// GetCode returns the Code field value
func (o *TypeErrorsInner) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *TypeErrorsInner) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *TypeErrorsInner) SetCode(v string) {
	o.Code = v
}

// GetMessage returns the Message field value
func (o *TypeErrorsInner) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *TypeErrorsInner) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *TypeErrorsInner) SetMessage(v string) {
	o.Message = v
}

func (o TypeErrorsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TypeErrorsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

type NullableTypeErrorsInner struct {
	value *TypeErrorsInner
	isSet bool
}

func (v NullableTypeErrorsInner) Get() *TypeErrorsInner {
	return v.value
}

func (v *NullableTypeErrorsInner) Set(val *TypeErrorsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTypeErrorsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTypeErrorsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTypeErrorsInner(val *TypeErrorsInner) *NullableTypeErrorsInner {
	return &NullableTypeErrorsInner{value: val, isSet: true}
}

func (v NullableTypeErrorsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTypeErrorsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


