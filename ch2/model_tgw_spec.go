/*
CH2 Management API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TgwSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TgwSpec{}

// TgwSpec struct for TgwSpec
type TgwSpec struct {
	ResourceShare ResourceShare `json:"resourceShare"`
	Region string `json:"region"`
	SpaceName *string `json:"spaceName,omitempty"`
}

// NewTgwSpec instantiates a new TgwSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTgwSpec(resourceShare ResourceShare, region string) *TgwSpec {
	this := TgwSpec{}
	this.ResourceShare = resourceShare
	this.Region = region
	return &this
}

// NewTgwSpecWithDefaults instantiates a new TgwSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTgwSpecWithDefaults() *TgwSpec {
	this := TgwSpec{}
	return &this
}

// GetResourceShare returns the ResourceShare field value
func (o *TgwSpec) GetResourceShare() ResourceShare {
	if o == nil {
		var ret ResourceShare
		return ret
	}

	return o.ResourceShare
}

// GetResourceShareOk returns a tuple with the ResourceShare field value
// and a boolean to check if the value has been set.
func (o *TgwSpec) GetResourceShareOk() (*ResourceShare, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceShare, true
}

// SetResourceShare sets field value
func (o *TgwSpec) SetResourceShare(v ResourceShare) {
	o.ResourceShare = v
}

// GetRegion returns the Region field value
func (o *TgwSpec) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *TgwSpec) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *TgwSpec) SetRegion(v string) {
	o.Region = v
}

// GetSpaceName returns the SpaceName field value if set, zero value otherwise.
func (o *TgwSpec) GetSpaceName() string {
	if o == nil || IsNil(o.SpaceName) {
		var ret string
		return ret
	}
	return *o.SpaceName
}

// GetSpaceNameOk returns a tuple with the SpaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TgwSpec) GetSpaceNameOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceName) {
		return nil, false
	}
	return o.SpaceName, true
}

// HasSpaceName returns a boolean if a field has been set.
func (o *TgwSpec) HasSpaceName() bool {
	if o != nil && !IsNil(o.SpaceName) {
		return true
	}

	return false
}

// SetSpaceName gets a reference to the given string and assigns it to the SpaceName field.
func (o *TgwSpec) SetSpaceName(v string) {
	o.SpaceName = &v
}

func (o TgwSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TgwSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resourceShare"] = o.ResourceShare
	toSerialize["region"] = o.Region
	if !IsNil(o.SpaceName) {
		toSerialize["spaceName"] = o.SpaceName
	}
	return toSerialize, nil
}

type NullableTgwSpec struct {
	value *TgwSpec
	isSet bool
}

func (v NullableTgwSpec) Get() *TgwSpec {
	return v.value
}

func (v *NullableTgwSpec) Set(val *TgwSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableTgwSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableTgwSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTgwSpec(val *TgwSpec) *NullableTgwSpec {
	return &NullableTgwSpec{value: val, isSet: true}
}

func (v NullableTgwSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTgwSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


