/*
CH2 Management API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PrivateSpaceConnection1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateSpaceConnection1{}

// PrivateSpaceConnection1 struct for PrivateSpaceConnection1
type PrivateSpaceConnection1 struct {
	Id string `json:"id"`
	Name string `json:"name"`
	Vpns []Items `json:"vpns"`
}

// NewPrivateSpaceConnection1 instantiates a new PrivateSpaceConnection1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateSpaceConnection1(id string, name string, vpns []Items) *PrivateSpaceConnection1 {
	this := PrivateSpaceConnection1{}
	this.Id = id
	this.Name = name
	this.Vpns = vpns
	return &this
}

// NewPrivateSpaceConnection1WithDefaults instantiates a new PrivateSpaceConnection1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateSpaceConnection1WithDefaults() *PrivateSpaceConnection1 {
	this := PrivateSpaceConnection1{}
	return &this
}

// GetId returns the Id field value
func (o *PrivateSpaceConnection1) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PrivateSpaceConnection1) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PrivateSpaceConnection1) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *PrivateSpaceConnection1) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PrivateSpaceConnection1) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PrivateSpaceConnection1) SetName(v string) {
	o.Name = v
}

// GetVpns returns the Vpns field value
func (o *PrivateSpaceConnection1) GetVpns() []Items {
	if o == nil {
		var ret []Items
		return ret
	}

	return o.Vpns
}

// GetVpnsOk returns a tuple with the Vpns field value
// and a boolean to check if the value has been set.
func (o *PrivateSpaceConnection1) GetVpnsOk() ([]Items, bool) {
	if o == nil {
		return nil, false
	}
	return o.Vpns, true
}

// SetVpns sets field value
func (o *PrivateSpaceConnection1) SetVpns(v []Items) {
	o.Vpns = v
}

func (o PrivateSpaceConnection1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateSpaceConnection1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["vpns"] = o.Vpns
	return toSerialize, nil
}

type NullablePrivateSpaceConnection1 struct {
	value *PrivateSpaceConnection1
	isSet bool
}

func (v NullablePrivateSpaceConnection1) Get() *PrivateSpaceConnection1 {
	return v.value
}

func (v *NullablePrivateSpaceConnection1) Set(val *PrivateSpaceConnection1) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateSpaceConnection1) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateSpaceConnection1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateSpaceConnection1(val *PrivateSpaceConnection1) *NullablePrivateSpaceConnection1 {
	return &NullablePrivateSpaceConnection1{value: val, isSet: true}
}

func (v NullablePrivateSpaceConnection1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateSpaceConnection1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


