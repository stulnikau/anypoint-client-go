/*
CH2 Management API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Items10BasicConstraints type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Items10BasicConstraints{}

// Items10BasicConstraints This identifies if the subject of the certificate is a CA
type Items10BasicConstraints struct {
	// If set to true, indicates that this is a CA certificate.
	CertificateAuthority bool `json:"certificateAuthority"`
}

// NewItems10BasicConstraints instantiates a new Items10BasicConstraints object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItems10BasicConstraints(certificateAuthority bool) *Items10BasicConstraints {
	this := Items10BasicConstraints{}
	this.CertificateAuthority = certificateAuthority
	return &this
}

// NewItems10BasicConstraintsWithDefaults instantiates a new Items10BasicConstraints object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItems10BasicConstraintsWithDefaults() *Items10BasicConstraints {
	this := Items10BasicConstraints{}
	return &this
}

// GetCertificateAuthority returns the CertificateAuthority field value
func (o *Items10BasicConstraints) GetCertificateAuthority() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CertificateAuthority
}

// GetCertificateAuthorityOk returns a tuple with the CertificateAuthority field value
// and a boolean to check if the value has been set.
func (o *Items10BasicConstraints) GetCertificateAuthorityOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CertificateAuthority, true
}

// SetCertificateAuthority sets field value
func (o *Items10BasicConstraints) SetCertificateAuthority(v bool) {
	o.CertificateAuthority = v
}

func (o Items10BasicConstraints) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Items10BasicConstraints) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["certificateAuthority"] = o.CertificateAuthority
	return toSerialize, nil
}

type NullableItems10BasicConstraints struct {
	value *Items10BasicConstraints
	isSet bool
}

func (v NullableItems10BasicConstraints) Get() *Items10BasicConstraints {
	return v.value
}

func (v *NullableItems10BasicConstraints) Set(val *Items10BasicConstraints) {
	v.value = val
	v.isSet = true
}

func (v NullableItems10BasicConstraints) IsSet() bool {
	return v.isSet
}

func (v *NullableItems10BasicConstraints) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItems10BasicConstraints(val *Items10BasicConstraints) *NullableItems10BasicConstraints {
	return &NullableItems10BasicConstraints{value: val, isSet: true}
}

func (v NullableItems10BasicConstraints) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItems10BasicConstraints) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


