/*
CH2 Management API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TlsConfigPem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TlsConfigPem{}

// TlsConfigPem struct for TlsConfigPem
type TlsConfigPem struct {
	KeyStore KeyStorePem `json:"keyStore"`
	TrustStore map[string]interface{} `json:"trustStore,omitempty"`
}

// NewTlsConfigPem instantiates a new TlsConfigPem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTlsConfigPem(keyStore KeyStorePem) *TlsConfigPem {
	this := TlsConfigPem{}
	this.KeyStore = keyStore
	return &this
}

// NewTlsConfigPemWithDefaults instantiates a new TlsConfigPem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTlsConfigPemWithDefaults() *TlsConfigPem {
	this := TlsConfigPem{}
	return &this
}

// GetKeyStore returns the KeyStore field value
func (o *TlsConfigPem) GetKeyStore() KeyStorePem {
	if o == nil {
		var ret KeyStorePem
		return ret
	}

	return o.KeyStore
}

// GetKeyStoreOk returns a tuple with the KeyStore field value
// and a boolean to check if the value has been set.
func (o *TlsConfigPem) GetKeyStoreOk() (*KeyStorePem, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyStore, true
}

// SetKeyStore sets field value
func (o *TlsConfigPem) SetKeyStore(v KeyStorePem) {
	o.KeyStore = v
}

// GetTrustStore returns the TrustStore field value if set, zero value otherwise.
func (o *TlsConfigPem) GetTrustStore() map[string]interface{} {
	if o == nil || IsNil(o.TrustStore) {
		var ret map[string]interface{}
		return ret
	}
	return o.TrustStore
}

// GetTrustStoreOk returns a tuple with the TrustStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsConfigPem) GetTrustStoreOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.TrustStore) {
		return map[string]interface{}{}, false
	}
	return o.TrustStore, true
}

// HasTrustStore returns a boolean if a field has been set.
func (o *TlsConfigPem) HasTrustStore() bool {
	if o != nil && !IsNil(o.TrustStore) {
		return true
	}

	return false
}

// SetTrustStore gets a reference to the given map[string]interface{} and assigns it to the TrustStore field.
func (o *TlsConfigPem) SetTrustStore(v map[string]interface{}) {
	o.TrustStore = v
}

func (o TlsConfigPem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TlsConfigPem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["keyStore"] = o.KeyStore
	if !IsNil(o.TrustStore) {
		toSerialize["trustStore"] = o.TrustStore
	}
	return toSerialize, nil
}

type NullableTlsConfigPem struct {
	value *TlsConfigPem
	isSet bool
}

func (v NullableTlsConfigPem) Get() *TlsConfigPem {
	return v.value
}

func (v *NullableTlsConfigPem) Set(val *TlsConfigPem) {
	v.value = val
	v.isSet = true
}

func (v NullableTlsConfigPem) IsSet() bool {
	return v.isSet
}

func (v *NullableTlsConfigPem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTlsConfigPem(val *TlsConfigPem) *NullableTlsConfigPem {
	return &NullableTlsConfigPem{value: val, isSet: true}
}

func (v NullableTlsConfigPem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTlsConfigPem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


