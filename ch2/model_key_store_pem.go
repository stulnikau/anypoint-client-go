/*
CH2 Management API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KeyStorePem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyStorePem{}

// KeyStorePem struct for KeyStorePem
type KeyStorePem struct {
	Source string `json:"source"`
	Certificate string `json:"certificate"`
	Key string `json:"key"`
	Capath *string `json:"capath,omitempty"`
	CertificateFileName *string `json:"certificateFileName,omitempty"`
	KeyFileName *string `json:"keyFileName,omitempty"`
	CapathFileName *string `json:"capathFileName,omitempty"`
	KeyPassphrase string `json:"keyPassphrase"`
}

// NewKeyStorePem instantiates a new KeyStorePem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyStorePem(source string, certificate string, key string, keyPassphrase string) *KeyStorePem {
	this := KeyStorePem{}
	this.Source = source
	this.Certificate = certificate
	this.Key = key
	this.KeyPassphrase = keyPassphrase
	return &this
}

// NewKeyStorePemWithDefaults instantiates a new KeyStorePem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyStorePemWithDefaults() *KeyStorePem {
	this := KeyStorePem{}
	return &this
}

// GetSource returns the Source field value
func (o *KeyStorePem) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *KeyStorePem) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *KeyStorePem) SetSource(v string) {
	o.Source = v
}

// GetCertificate returns the Certificate field value
func (o *KeyStorePem) GetCertificate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value
// and a boolean to check if the value has been set.
func (o *KeyStorePem) GetCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Certificate, true
}

// SetCertificate sets field value
func (o *KeyStorePem) SetCertificate(v string) {
	o.Certificate = v
}

// GetKey returns the Key field value
func (o *KeyStorePem) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *KeyStorePem) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *KeyStorePem) SetKey(v string) {
	o.Key = v
}

// GetCapath returns the Capath field value if set, zero value otherwise.
func (o *KeyStorePem) GetCapath() string {
	if o == nil || IsNil(o.Capath) {
		var ret string
		return ret
	}
	return *o.Capath
}

// GetCapathOk returns a tuple with the Capath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyStorePem) GetCapathOk() (*string, bool) {
	if o == nil || IsNil(o.Capath) {
		return nil, false
	}
	return o.Capath, true
}

// HasCapath returns a boolean if a field has been set.
func (o *KeyStorePem) HasCapath() bool {
	if o != nil && !IsNil(o.Capath) {
		return true
	}

	return false
}

// SetCapath gets a reference to the given string and assigns it to the Capath field.
func (o *KeyStorePem) SetCapath(v string) {
	o.Capath = &v
}

// GetCertificateFileName returns the CertificateFileName field value if set, zero value otherwise.
func (o *KeyStorePem) GetCertificateFileName() string {
	if o == nil || IsNil(o.CertificateFileName) {
		var ret string
		return ret
	}
	return *o.CertificateFileName
}

// GetCertificateFileNameOk returns a tuple with the CertificateFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyStorePem) GetCertificateFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateFileName) {
		return nil, false
	}
	return o.CertificateFileName, true
}

// HasCertificateFileName returns a boolean if a field has been set.
func (o *KeyStorePem) HasCertificateFileName() bool {
	if o != nil && !IsNil(o.CertificateFileName) {
		return true
	}

	return false
}

// SetCertificateFileName gets a reference to the given string and assigns it to the CertificateFileName field.
func (o *KeyStorePem) SetCertificateFileName(v string) {
	o.CertificateFileName = &v
}

// GetKeyFileName returns the KeyFileName field value if set, zero value otherwise.
func (o *KeyStorePem) GetKeyFileName() string {
	if o == nil || IsNil(o.KeyFileName) {
		var ret string
		return ret
	}
	return *o.KeyFileName
}

// GetKeyFileNameOk returns a tuple with the KeyFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyStorePem) GetKeyFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.KeyFileName) {
		return nil, false
	}
	return o.KeyFileName, true
}

// HasKeyFileName returns a boolean if a field has been set.
func (o *KeyStorePem) HasKeyFileName() bool {
	if o != nil && !IsNil(o.KeyFileName) {
		return true
	}

	return false
}

// SetKeyFileName gets a reference to the given string and assigns it to the KeyFileName field.
func (o *KeyStorePem) SetKeyFileName(v string) {
	o.KeyFileName = &v
}

// GetCapathFileName returns the CapathFileName field value if set, zero value otherwise.
func (o *KeyStorePem) GetCapathFileName() string {
	if o == nil || IsNil(o.CapathFileName) {
		var ret string
		return ret
	}
	return *o.CapathFileName
}

// GetCapathFileNameOk returns a tuple with the CapathFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyStorePem) GetCapathFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.CapathFileName) {
		return nil, false
	}
	return o.CapathFileName, true
}

// HasCapathFileName returns a boolean if a field has been set.
func (o *KeyStorePem) HasCapathFileName() bool {
	if o != nil && !IsNil(o.CapathFileName) {
		return true
	}

	return false
}

// SetCapathFileName gets a reference to the given string and assigns it to the CapathFileName field.
func (o *KeyStorePem) SetCapathFileName(v string) {
	o.CapathFileName = &v
}

// GetKeyPassphrase returns the KeyPassphrase field value
func (o *KeyStorePem) GetKeyPassphrase() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyPassphrase
}

// GetKeyPassphraseOk returns a tuple with the KeyPassphrase field value
// and a boolean to check if the value has been set.
func (o *KeyStorePem) GetKeyPassphraseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyPassphrase, true
}

// SetKeyPassphrase sets field value
func (o *KeyStorePem) SetKeyPassphrase(v string) {
	o.KeyPassphrase = v
}

func (o KeyStorePem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyStorePem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["source"] = o.Source
	toSerialize["certificate"] = o.Certificate
	toSerialize["key"] = o.Key
	if !IsNil(o.Capath) {
		toSerialize["capath"] = o.Capath
	}
	if !IsNil(o.CertificateFileName) {
		toSerialize["certificateFileName"] = o.CertificateFileName
	}
	if !IsNil(o.KeyFileName) {
		toSerialize["keyFileName"] = o.KeyFileName
	}
	if !IsNil(o.CapathFileName) {
		toSerialize["capathFileName"] = o.CapathFileName
	}
	toSerialize["keyPassphrase"] = o.KeyPassphrase
	return toSerialize, nil
}

type NullableKeyStorePem struct {
	value *KeyStorePem
	isSet bool
}

func (v NullableKeyStorePem) Get() *KeyStorePem {
	return v.value
}

func (v *NullableKeyStorePem) Set(val *KeyStorePem) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyStorePem) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyStorePem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyStorePem(val *KeyStorePem) *NullableKeyStorePem {
	return &NullableKeyStorePem{value: val, isSet: true}
}

func (v NullableKeyStorePem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyStorePem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


