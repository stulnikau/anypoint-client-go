/*
CH2 Management API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PrivateSpaceTlsContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateSpaceTlsContext{}

// PrivateSpaceTlsContext struct for PrivateSpaceTlsContext
type PrivateSpaceTlsContext struct {
	Id string `json:"id"`
	Name string `json:"name"`
	TrustStore *TrustStore `json:"trustStore,omitempty"`
	KeyStore KeyStoreResponse `json:"keyStore"`
	Ciphers Ciphers `json:"ciphers"`
	// \"custom\" TLS context is managed by users, whereas \"default\" is managed by Cloudhub 2.0 
	Type *string `json:"type,omitempty"`
}

// NewPrivateSpaceTlsContext instantiates a new PrivateSpaceTlsContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateSpaceTlsContext(id string, name string, keyStore KeyStoreResponse, ciphers Ciphers) *PrivateSpaceTlsContext {
	this := PrivateSpaceTlsContext{}
	this.Id = id
	this.Name = name
	this.KeyStore = keyStore
	this.Ciphers = ciphers
	return &this
}

// NewPrivateSpaceTlsContextWithDefaults instantiates a new PrivateSpaceTlsContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateSpaceTlsContextWithDefaults() *PrivateSpaceTlsContext {
	this := PrivateSpaceTlsContext{}
	return &this
}

// GetId returns the Id field value
func (o *PrivateSpaceTlsContext) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PrivateSpaceTlsContext) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PrivateSpaceTlsContext) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *PrivateSpaceTlsContext) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PrivateSpaceTlsContext) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PrivateSpaceTlsContext) SetName(v string) {
	o.Name = v
}

// GetTrustStore returns the TrustStore field value if set, zero value otherwise.
func (o *PrivateSpaceTlsContext) GetTrustStore() TrustStore {
	if o == nil || IsNil(o.TrustStore) {
		var ret TrustStore
		return ret
	}
	return *o.TrustStore
}

// GetTrustStoreOk returns a tuple with the TrustStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpaceTlsContext) GetTrustStoreOk() (*TrustStore, bool) {
	if o == nil || IsNil(o.TrustStore) {
		return nil, false
	}
	return o.TrustStore, true
}

// HasTrustStore returns a boolean if a field has been set.
func (o *PrivateSpaceTlsContext) HasTrustStore() bool {
	if o != nil && !IsNil(o.TrustStore) {
		return true
	}

	return false
}

// SetTrustStore gets a reference to the given TrustStore and assigns it to the TrustStore field.
func (o *PrivateSpaceTlsContext) SetTrustStore(v TrustStore) {
	o.TrustStore = &v
}

// GetKeyStore returns the KeyStore field value
func (o *PrivateSpaceTlsContext) GetKeyStore() KeyStoreResponse {
	if o == nil {
		var ret KeyStoreResponse
		return ret
	}

	return o.KeyStore
}

// GetKeyStoreOk returns a tuple with the KeyStore field value
// and a boolean to check if the value has been set.
func (o *PrivateSpaceTlsContext) GetKeyStoreOk() (*KeyStoreResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyStore, true
}

// SetKeyStore sets field value
func (o *PrivateSpaceTlsContext) SetKeyStore(v KeyStoreResponse) {
	o.KeyStore = v
}

// GetCiphers returns the Ciphers field value
func (o *PrivateSpaceTlsContext) GetCiphers() Ciphers {
	if o == nil {
		var ret Ciphers
		return ret
	}

	return o.Ciphers
}

// GetCiphersOk returns a tuple with the Ciphers field value
// and a boolean to check if the value has been set.
func (o *PrivateSpaceTlsContext) GetCiphersOk() (*Ciphers, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ciphers, true
}

// SetCiphers sets field value
func (o *PrivateSpaceTlsContext) SetCiphers(v Ciphers) {
	o.Ciphers = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PrivateSpaceTlsContext) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpaceTlsContext) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PrivateSpaceTlsContext) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PrivateSpaceTlsContext) SetType(v string) {
	o.Type = &v
}

func (o PrivateSpaceTlsContext) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateSpaceTlsContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !IsNil(o.TrustStore) {
		toSerialize["trustStore"] = o.TrustStore
	}
	toSerialize["keyStore"] = o.KeyStore
	toSerialize["ciphers"] = o.Ciphers
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullablePrivateSpaceTlsContext struct {
	value *PrivateSpaceTlsContext
	isSet bool
}

func (v NullablePrivateSpaceTlsContext) Get() *PrivateSpaceTlsContext {
	return v.value
}

func (v *NullablePrivateSpaceTlsContext) Set(val *PrivateSpaceTlsContext) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateSpaceTlsContext) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateSpaceTlsContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateSpaceTlsContext(val *PrivateSpaceTlsContext) *NullablePrivateSpaceTlsContext {
	return &NullablePrivateSpaceTlsContext{value: val, isSet: true}
}

func (v NullablePrivateSpaceTlsContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateSpaceTlsContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


