/*
CH2 Management API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PrivateSpace type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateSpace{}

// PrivateSpace struct for PrivateSpace
type PrivateSpace struct {
	// The id of the Private Space.
	Id string `json:"id"`
	// The name of the Private Space.
	Name string `json:"name"`
	Status *string `json:"status,omitempty"`
	// The last reported infra status message.
	StatusMessage *string `json:"statusMessage,omitempty"`
	Provisioning *PrivateSpaceProvisioning `json:"provisioning,omitempty"`
	// [Deprecated - will be removed when UI is updated] The region of the Private Space 
	Region *string `json:"region,omitempty"`
	// The parent organization ID of the Private Space
	OrganizationId string `json:"organizationId"`
	// [Deprecated - will be removed when UI is updated] The firewall rules for the Private Space 
	ManagedFirewallRules []FirewallRule `json:"managedFirewallRules,omitempty"`
	Environments Environments `json:"environments"`
	Network Network `json:"network"`
	// The firewall rules for the Private Space 
	FirewallRules []FirewallRule `json:"firewallRules"`
	IngressConfiguration IngressConfiguration `json:"ingressConfiguration"`
	// If true, application deployed to this space will have the Private Space IAM role attached to the service account.
	EnableIAMRole *bool `json:"enableIAMRole,omitempty"`
	GlobalSpaceStatus *GlobalSpaceStatus `json:"globalSpaceStatus,omitempty"`
}

// NewPrivateSpace instantiates a new PrivateSpace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateSpace(id string, name string, organizationId string, environments Environments, network Network, firewallRules []FirewallRule, ingressConfiguration IngressConfiguration) *PrivateSpace {
	this := PrivateSpace{}
	this.Id = id
	this.Name = name
	this.OrganizationId = organizationId
	this.Environments = environments
	this.Network = network
	this.FirewallRules = firewallRules
	this.IngressConfiguration = ingressConfiguration
	return &this
}

// NewPrivateSpaceWithDefaults instantiates a new PrivateSpace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateSpaceWithDefaults() *PrivateSpace {
	this := PrivateSpace{}
	return &this
}

// GetId returns the Id field value
func (o *PrivateSpace) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PrivateSpace) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *PrivateSpace) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PrivateSpace) SetName(v string) {
	o.Name = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PrivateSpace) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PrivateSpace) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PrivateSpace) SetStatus(v string) {
	o.Status = &v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *PrivateSpace) GetStatusMessage() string {
	if o == nil || IsNil(o.StatusMessage) {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetStatusMessageOk() (*string, bool) {
	if o == nil || IsNil(o.StatusMessage) {
		return nil, false
	}
	return o.StatusMessage, true
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *PrivateSpace) HasStatusMessage() bool {
	if o != nil && !IsNil(o.StatusMessage) {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *PrivateSpace) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

// GetProvisioning returns the Provisioning field value if set, zero value otherwise.
func (o *PrivateSpace) GetProvisioning() PrivateSpaceProvisioning {
	if o == nil || IsNil(o.Provisioning) {
		var ret PrivateSpaceProvisioning
		return ret
	}
	return *o.Provisioning
}

// GetProvisioningOk returns a tuple with the Provisioning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetProvisioningOk() (*PrivateSpaceProvisioning, bool) {
	if o == nil || IsNil(o.Provisioning) {
		return nil, false
	}
	return o.Provisioning, true
}

// HasProvisioning returns a boolean if a field has been set.
func (o *PrivateSpace) HasProvisioning() bool {
	if o != nil && !IsNil(o.Provisioning) {
		return true
	}

	return false
}

// SetProvisioning gets a reference to the given PrivateSpaceProvisioning and assigns it to the Provisioning field.
func (o *PrivateSpace) SetProvisioning(v PrivateSpaceProvisioning) {
	o.Provisioning = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *PrivateSpace) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *PrivateSpace) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *PrivateSpace) SetRegion(v string) {
	o.Region = &v
}

// GetOrganizationId returns the OrganizationId field value
func (o *PrivateSpace) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *PrivateSpace) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetManagedFirewallRules returns the ManagedFirewallRules field value if set, zero value otherwise.
func (o *PrivateSpace) GetManagedFirewallRules() []FirewallRule {
	if o == nil || IsNil(o.ManagedFirewallRules) {
		var ret []FirewallRule
		return ret
	}
	return o.ManagedFirewallRules
}

// GetManagedFirewallRulesOk returns a tuple with the ManagedFirewallRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetManagedFirewallRulesOk() ([]FirewallRule, bool) {
	if o == nil || IsNil(o.ManagedFirewallRules) {
		return nil, false
	}
	return o.ManagedFirewallRules, true
}

// HasManagedFirewallRules returns a boolean if a field has been set.
func (o *PrivateSpace) HasManagedFirewallRules() bool {
	if o != nil && !IsNil(o.ManagedFirewallRules) {
		return true
	}

	return false
}

// SetManagedFirewallRules gets a reference to the given []FirewallRule and assigns it to the ManagedFirewallRules field.
func (o *PrivateSpace) SetManagedFirewallRules(v []FirewallRule) {
	o.ManagedFirewallRules = v
}

// GetEnvironments returns the Environments field value
func (o *PrivateSpace) GetEnvironments() Environments {
	if o == nil {
		var ret Environments
		return ret
	}

	return o.Environments
}

// GetEnvironmentsOk returns a tuple with the Environments field value
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetEnvironmentsOk() (*Environments, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environments, true
}

// SetEnvironments sets field value
func (o *PrivateSpace) SetEnvironments(v Environments) {
	o.Environments = v
}

// GetNetwork returns the Network field value
func (o *PrivateSpace) GetNetwork() Network {
	if o == nil {
		var ret Network
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetNetworkOk() (*Network, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *PrivateSpace) SetNetwork(v Network) {
	o.Network = v
}

// GetFirewallRules returns the FirewallRules field value
func (o *PrivateSpace) GetFirewallRules() []FirewallRule {
	if o == nil {
		var ret []FirewallRule
		return ret
	}

	return o.FirewallRules
}

// GetFirewallRulesOk returns a tuple with the FirewallRules field value
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetFirewallRulesOk() ([]FirewallRule, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirewallRules, true
}

// SetFirewallRules sets field value
func (o *PrivateSpace) SetFirewallRules(v []FirewallRule) {
	o.FirewallRules = v
}

// GetIngressConfiguration returns the IngressConfiguration field value
func (o *PrivateSpace) GetIngressConfiguration() IngressConfiguration {
	if o == nil {
		var ret IngressConfiguration
		return ret
	}

	return o.IngressConfiguration
}

// GetIngressConfigurationOk returns a tuple with the IngressConfiguration field value
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetIngressConfigurationOk() (*IngressConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IngressConfiguration, true
}

// SetIngressConfiguration sets field value
func (o *PrivateSpace) SetIngressConfiguration(v IngressConfiguration) {
	o.IngressConfiguration = v
}

// GetEnableIAMRole returns the EnableIAMRole field value if set, zero value otherwise.
func (o *PrivateSpace) GetEnableIAMRole() bool {
	if o == nil || IsNil(o.EnableIAMRole) {
		var ret bool
		return ret
	}
	return *o.EnableIAMRole
}

// GetEnableIAMRoleOk returns a tuple with the EnableIAMRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetEnableIAMRoleOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableIAMRole) {
		return nil, false
	}
	return o.EnableIAMRole, true
}

// HasEnableIAMRole returns a boolean if a field has been set.
func (o *PrivateSpace) HasEnableIAMRole() bool {
	if o != nil && !IsNil(o.EnableIAMRole) {
		return true
	}

	return false
}

// SetEnableIAMRole gets a reference to the given bool and assigns it to the EnableIAMRole field.
func (o *PrivateSpace) SetEnableIAMRole(v bool) {
	o.EnableIAMRole = &v
}

// GetGlobalSpaceStatus returns the GlobalSpaceStatus field value if set, zero value otherwise.
func (o *PrivateSpace) GetGlobalSpaceStatus() GlobalSpaceStatus {
	if o == nil || IsNil(o.GlobalSpaceStatus) {
		var ret GlobalSpaceStatus
		return ret
	}
	return *o.GlobalSpaceStatus
}

// GetGlobalSpaceStatusOk returns a tuple with the GlobalSpaceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetGlobalSpaceStatusOk() (*GlobalSpaceStatus, bool) {
	if o == nil || IsNil(o.GlobalSpaceStatus) {
		return nil, false
	}
	return o.GlobalSpaceStatus, true
}

// HasGlobalSpaceStatus returns a boolean if a field has been set.
func (o *PrivateSpace) HasGlobalSpaceStatus() bool {
	if o != nil && !IsNil(o.GlobalSpaceStatus) {
		return true
	}

	return false
}

// SetGlobalSpaceStatus gets a reference to the given GlobalSpaceStatus and assigns it to the GlobalSpaceStatus field.
func (o *PrivateSpace) SetGlobalSpaceStatus(v GlobalSpaceStatus) {
	o.GlobalSpaceStatus = &v
}

func (o PrivateSpace) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateSpace) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusMessage) {
		toSerialize["statusMessage"] = o.StatusMessage
	}
	if !IsNil(o.Provisioning) {
		toSerialize["provisioning"] = o.Provisioning
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	toSerialize["organizationId"] = o.OrganizationId
	if !IsNil(o.ManagedFirewallRules) {
		toSerialize["managedFirewallRules"] = o.ManagedFirewallRules
	}
	toSerialize["environments"] = o.Environments
	toSerialize["network"] = o.Network
	toSerialize["firewallRules"] = o.FirewallRules
	toSerialize["ingressConfiguration"] = o.IngressConfiguration
	if !IsNil(o.EnableIAMRole) {
		toSerialize["enableIAMRole"] = o.EnableIAMRole
	}
	if !IsNil(o.GlobalSpaceStatus) {
		toSerialize["globalSpaceStatus"] = o.GlobalSpaceStatus
	}
	return toSerialize, nil
}

type NullablePrivateSpace struct {
	value *PrivateSpace
	isSet bool
}

func (v NullablePrivateSpace) Get() *PrivateSpace {
	return v.value
}

func (v *NullablePrivateSpace) Set(val *PrivateSpace) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateSpace) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateSpace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateSpace(val *PrivateSpace) *NullablePrivateSpace {
	return &NullablePrivateSpace{value: val, isSet: true}
}

func (v NullablePrivateSpace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateSpace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


