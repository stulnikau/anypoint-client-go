/*
CH2 Management API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GlobalClusterStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalClusterStatus{}

// GlobalClusterStatus struct for GlobalClusterStatus
type GlobalClusterStatus struct {
	Infra *Infra `json:"infra,omitempty"`
	Fabric *Fabric `json:"fabric,omitempty"`
	Ingress *Ingress `json:"ingress,omitempty"`
}

// NewGlobalClusterStatus instantiates a new GlobalClusterStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalClusterStatus() *GlobalClusterStatus {
	this := GlobalClusterStatus{}
	return &this
}

// NewGlobalClusterStatusWithDefaults instantiates a new GlobalClusterStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalClusterStatusWithDefaults() *GlobalClusterStatus {
	this := GlobalClusterStatus{}
	return &this
}

// GetInfra returns the Infra field value if set, zero value otherwise.
func (o *GlobalClusterStatus) GetInfra() Infra {
	if o == nil || IsNil(o.Infra) {
		var ret Infra
		return ret
	}
	return *o.Infra
}

// GetInfraOk returns a tuple with the Infra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalClusterStatus) GetInfraOk() (*Infra, bool) {
	if o == nil || IsNil(o.Infra) {
		return nil, false
	}
	return o.Infra, true
}

// HasInfra returns a boolean if a field has been set.
func (o *GlobalClusterStatus) HasInfra() bool {
	if o != nil && !IsNil(o.Infra) {
		return true
	}

	return false
}

// SetInfra gets a reference to the given Infra and assigns it to the Infra field.
func (o *GlobalClusterStatus) SetInfra(v Infra) {
	o.Infra = &v
}

// GetFabric returns the Fabric field value if set, zero value otherwise.
func (o *GlobalClusterStatus) GetFabric() Fabric {
	if o == nil || IsNil(o.Fabric) {
		var ret Fabric
		return ret
	}
	return *o.Fabric
}

// GetFabricOk returns a tuple with the Fabric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalClusterStatus) GetFabricOk() (*Fabric, bool) {
	if o == nil || IsNil(o.Fabric) {
		return nil, false
	}
	return o.Fabric, true
}

// HasFabric returns a boolean if a field has been set.
func (o *GlobalClusterStatus) HasFabric() bool {
	if o != nil && !IsNil(o.Fabric) {
		return true
	}

	return false
}

// SetFabric gets a reference to the given Fabric and assigns it to the Fabric field.
func (o *GlobalClusterStatus) SetFabric(v Fabric) {
	o.Fabric = &v
}

// GetIngress returns the Ingress field value if set, zero value otherwise.
func (o *GlobalClusterStatus) GetIngress() Ingress {
	if o == nil || IsNil(o.Ingress) {
		var ret Ingress
		return ret
	}
	return *o.Ingress
}

// GetIngressOk returns a tuple with the Ingress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalClusterStatus) GetIngressOk() (*Ingress, bool) {
	if o == nil || IsNil(o.Ingress) {
		return nil, false
	}
	return o.Ingress, true
}

// HasIngress returns a boolean if a field has been set.
func (o *GlobalClusterStatus) HasIngress() bool {
	if o != nil && !IsNil(o.Ingress) {
		return true
	}

	return false
}

// SetIngress gets a reference to the given Ingress and assigns it to the Ingress field.
func (o *GlobalClusterStatus) SetIngress(v Ingress) {
	o.Ingress = &v
}

func (o GlobalClusterStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalClusterStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Infra) {
		toSerialize["infra"] = o.Infra
	}
	if !IsNil(o.Fabric) {
		toSerialize["fabric"] = o.Fabric
	}
	if !IsNil(o.Ingress) {
		toSerialize["ingress"] = o.Ingress
	}
	return toSerialize, nil
}

type NullableGlobalClusterStatus struct {
	value *GlobalClusterStatus
	isSet bool
}

func (v NullableGlobalClusterStatus) Get() *GlobalClusterStatus {
	return v.value
}

func (v *NullableGlobalClusterStatus) Set(val *GlobalClusterStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalClusterStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalClusterStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalClusterStatus(val *GlobalClusterStatus) *NullableGlobalClusterStatus {
	return &NullableGlobalClusterStatus{value: val, isSet: true}
}

func (v NullableGlobalClusterStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalClusterStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


