/*
CH2 Management API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InternalDns type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InternalDns{}

// InternalDns The internal DNS config of the VPC that the Private Space uses. 
type InternalDns struct {
	DnsServers []string `json:"dnsServers"`
	SpecialDomains []string `json:"specialDomains"`
}

// NewInternalDns instantiates a new InternalDns object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternalDns(dnsServers []string, specialDomains []string) *InternalDns {
	this := InternalDns{}
	this.DnsServers = dnsServers
	this.SpecialDomains = specialDomains
	return &this
}

// NewInternalDnsWithDefaults instantiates a new InternalDns object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternalDnsWithDefaults() *InternalDns {
	this := InternalDns{}
	return &this
}

// GetDnsServers returns the DnsServers field value
func (o *InternalDns) GetDnsServers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DnsServers
}

// GetDnsServersOk returns a tuple with the DnsServers field value
// and a boolean to check if the value has been set.
func (o *InternalDns) GetDnsServersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DnsServers, true
}

// SetDnsServers sets field value
func (o *InternalDns) SetDnsServers(v []string) {
	o.DnsServers = v
}

// GetSpecialDomains returns the SpecialDomains field value
func (o *InternalDns) GetSpecialDomains() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SpecialDomains
}

// GetSpecialDomainsOk returns a tuple with the SpecialDomains field value
// and a boolean to check if the value has been set.
func (o *InternalDns) GetSpecialDomainsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpecialDomains, true
}

// SetSpecialDomains sets field value
func (o *InternalDns) SetSpecialDomains(v []string) {
	o.SpecialDomains = v
}

func (o InternalDns) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternalDns) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dnsServers"] = o.DnsServers
	toSerialize["specialDomains"] = o.SpecialDomains
	return toSerialize, nil
}

type NullableInternalDns struct {
	value *InternalDns
	isSet bool
}

func (v NullableInternalDns) Get() *InternalDns {
	return v.value
}

func (v *NullableInternalDns) Set(val *InternalDns) {
	v.value = val
	v.isSet = true
}

func (v NullableInternalDns) IsSet() bool {
	return v.isSet
}

func (v *NullableInternalDns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternalDns(val *InternalDns) *NullableInternalDns {
	return &NullableInternalDns{value: val, isSet: true}
}

func (v NullableInternalDns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternalDns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


