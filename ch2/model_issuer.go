/*
CH2 Management API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Issuer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Issuer{}

// Issuer Details about the entity that issued the certificate.
type Issuer struct {
	CommonName string `json:"commonName"`
	CountryName string `json:"countryName"`
	LocalityName string `json:"localityName"`
	OrganizationName string `json:"organizationName"`
	OrganizationUnit string `json:"organizationUnit"`
	State string `json:"state"`
}

// NewIssuer instantiates a new Issuer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssuer(commonName string, countryName string, localityName string, organizationName string, organizationUnit string, state string) *Issuer {
	this := Issuer{}
	this.CommonName = commonName
	this.CountryName = countryName
	this.LocalityName = localityName
	this.OrganizationName = organizationName
	this.OrganizationUnit = organizationUnit
	this.State = state
	return &this
}

// NewIssuerWithDefaults instantiates a new Issuer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssuerWithDefaults() *Issuer {
	this := Issuer{}
	return &this
}

// GetCommonName returns the CommonName field value
func (o *Issuer) GetCommonName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value
// and a boolean to check if the value has been set.
func (o *Issuer) GetCommonNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommonName, true
}

// SetCommonName sets field value
func (o *Issuer) SetCommonName(v string) {
	o.CommonName = v
}

// GetCountryName returns the CountryName field value
func (o *Issuer) GetCountryName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryName
}

// GetCountryNameOk returns a tuple with the CountryName field value
// and a boolean to check if the value has been set.
func (o *Issuer) GetCountryNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryName, true
}

// SetCountryName sets field value
func (o *Issuer) SetCountryName(v string) {
	o.CountryName = v
}

// GetLocalityName returns the LocalityName field value
func (o *Issuer) GetLocalityName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LocalityName
}

// GetLocalityNameOk returns a tuple with the LocalityName field value
// and a boolean to check if the value has been set.
func (o *Issuer) GetLocalityNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocalityName, true
}

// SetLocalityName sets field value
func (o *Issuer) SetLocalityName(v string) {
	o.LocalityName = v
}

// GetOrganizationName returns the OrganizationName field value
func (o *Issuer) GetOrganizationName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value
// and a boolean to check if the value has been set.
func (o *Issuer) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationName, true
}

// SetOrganizationName sets field value
func (o *Issuer) SetOrganizationName(v string) {
	o.OrganizationName = v
}

// GetOrganizationUnit returns the OrganizationUnit field value
func (o *Issuer) GetOrganizationUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationUnit
}

// GetOrganizationUnitOk returns a tuple with the OrganizationUnit field value
// and a boolean to check if the value has been set.
func (o *Issuer) GetOrganizationUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationUnit, true
}

// SetOrganizationUnit sets field value
func (o *Issuer) SetOrganizationUnit(v string) {
	o.OrganizationUnit = v
}

// GetState returns the State field value
func (o *Issuer) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *Issuer) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *Issuer) SetState(v string) {
	o.State = v
}

func (o Issuer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Issuer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["commonName"] = o.CommonName
	toSerialize["countryName"] = o.CountryName
	toSerialize["localityName"] = o.LocalityName
	toSerialize["organizationName"] = o.OrganizationName
	toSerialize["organizationUnit"] = o.OrganizationUnit
	toSerialize["state"] = o.State
	return toSerialize, nil
}

type NullableIssuer struct {
	value *Issuer
	isSet bool
}

func (v NullableIssuer) Get() *Issuer {
	return v.value
}

func (v *NullableIssuer) Set(val *Issuer) {
	v.value = val
	v.isSet = true
}

func (v NullableIssuer) IsSet() bool {
	return v.isSet
}

func (v *NullableIssuer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssuer(val *Issuer) *NullableIssuer {
	return &NullableIssuer{value: val, isSet: true}
}

func (v NullableIssuer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssuer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


