/*
CH2 Management API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResourceShare type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceShare{}

// ResourceShare struct for ResourceShare
type ResourceShare struct {
	Id string `json:"id"`
	Account string `json:"account"`
}

// NewResourceShare instantiates a new ResourceShare object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceShare(id string, account string) *ResourceShare {
	this := ResourceShare{}
	this.Id = id
	this.Account = account
	return &this
}

// NewResourceShareWithDefaults instantiates a new ResourceShare object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceShareWithDefaults() *ResourceShare {
	this := ResourceShare{}
	return &this
}

// GetId returns the Id field value
func (o *ResourceShare) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ResourceShare) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ResourceShare) SetId(v string) {
	o.Id = v
}

// GetAccount returns the Account field value
func (o *ResourceShare) GetAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *ResourceShare) GetAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *ResourceShare) SetAccount(v string) {
	o.Account = v
}

func (o ResourceShare) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceShare) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["account"] = o.Account
	return toSerialize, nil
}

type NullableResourceShare struct {
	value *ResourceShare
	isSet bool
}

func (v NullableResourceShare) Get() *ResourceShare {
	return v.value
}

func (v *NullableResourceShare) Set(val *ResourceShare) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceShare) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceShare) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceShare(val *ResourceShare) *NullableResourceShare {
	return &NullableResourceShare{value: val, isSet: true}
}

func (v NullableResourceShare) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceShare) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


