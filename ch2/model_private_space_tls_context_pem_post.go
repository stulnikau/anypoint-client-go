/*
CH2 Management API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PrivateSpaceTlsContextPemPost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateSpaceTlsContextPemPost{}

// PrivateSpaceTlsContextPemPost struct for PrivateSpaceTlsContextPemPost
type PrivateSpaceTlsContextPemPost struct {
	Name string `json:"name"`
	TlsConfig TlsConfigPem `json:"tlsConfig"`
	Ciphers Ciphers `json:"ciphers"`
}

// NewPrivateSpaceTlsContextPemPost instantiates a new PrivateSpaceTlsContextPemPost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateSpaceTlsContextPemPost(name string, tlsConfig TlsConfigPem, ciphers Ciphers) *PrivateSpaceTlsContextPemPost {
	this := PrivateSpaceTlsContextPemPost{}
	this.Name = name
	this.TlsConfig = tlsConfig
	this.Ciphers = ciphers
	return &this
}

// NewPrivateSpaceTlsContextPemPostWithDefaults instantiates a new PrivateSpaceTlsContextPemPost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateSpaceTlsContextPemPostWithDefaults() *PrivateSpaceTlsContextPemPost {
	this := PrivateSpaceTlsContextPemPost{}
	return &this
}

// GetName returns the Name field value
func (o *PrivateSpaceTlsContextPemPost) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PrivateSpaceTlsContextPemPost) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PrivateSpaceTlsContextPemPost) SetName(v string) {
	o.Name = v
}

// GetTlsConfig returns the TlsConfig field value
func (o *PrivateSpaceTlsContextPemPost) GetTlsConfig() TlsConfigPem {
	if o == nil {
		var ret TlsConfigPem
		return ret
	}

	return o.TlsConfig
}

// GetTlsConfigOk returns a tuple with the TlsConfig field value
// and a boolean to check if the value has been set.
func (o *PrivateSpaceTlsContextPemPost) GetTlsConfigOk() (*TlsConfigPem, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TlsConfig, true
}

// SetTlsConfig sets field value
func (o *PrivateSpaceTlsContextPemPost) SetTlsConfig(v TlsConfigPem) {
	o.TlsConfig = v
}

// GetCiphers returns the Ciphers field value
func (o *PrivateSpaceTlsContextPemPost) GetCiphers() Ciphers {
	if o == nil {
		var ret Ciphers
		return ret
	}

	return o.Ciphers
}

// GetCiphersOk returns a tuple with the Ciphers field value
// and a boolean to check if the value has been set.
func (o *PrivateSpaceTlsContextPemPost) GetCiphersOk() (*Ciphers, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ciphers, true
}

// SetCiphers sets field value
func (o *PrivateSpaceTlsContextPemPost) SetCiphers(v Ciphers) {
	o.Ciphers = v
}

func (o PrivateSpaceTlsContextPemPost) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateSpaceTlsContextPemPost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["tlsConfig"] = o.TlsConfig
	toSerialize["ciphers"] = o.Ciphers
	return toSerialize, nil
}

type NullablePrivateSpaceTlsContextPemPost struct {
	value *PrivateSpaceTlsContextPemPost
	isSet bool
}

func (v NullablePrivateSpaceTlsContextPemPost) Get() *PrivateSpaceTlsContextPemPost {
	return v.value
}

func (v *NullablePrivateSpaceTlsContextPemPost) Set(val *PrivateSpaceTlsContextPemPost) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateSpaceTlsContextPemPost) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateSpaceTlsContextPemPost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateSpaceTlsContextPemPost(val *PrivateSpaceTlsContextPemPost) *NullablePrivateSpaceTlsContextPemPost {
	return &NullablePrivateSpaceTlsContextPemPost{value: val, isSet: true}
}

func (v NullablePrivateSpaceTlsContextPemPost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateSpaceTlsContextPemPost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


